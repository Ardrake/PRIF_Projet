#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SGML
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ML645-05037")]
	public partial class DataPRIFDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCLIENT(CLIENT instance);
    partial void UpdateCLIENT(CLIENT instance);
    partial void DeleteCLIENT(CLIENT instance);
    partial void InsertVEHICULE(VEHICULE instance);
    partial void UpdateVEHICULE(VEHICULE instance);
    partial void DeleteVEHICULE(VEHICULE instance);
    partial void InsertTYPE(TYPE instance);
    partial void UpdateTYPE(TYPE instance);
    partial void DeleteTYPE(TYPE instance);
    partial void InsertCOULEUR(COULEUR instance);
    partial void UpdateCOULEUR(COULEUR instance);
    partial void DeleteCOULEUR(COULEUR instance);
    partial void InsertMODELE(MODELE instance);
    partial void UpdateMODELE(MODELE instance);
    partial void DeleteMODELE(MODELE instance);
    partial void InsertTERME(TERME instance);
    partial void UpdateTERME(TERME instance);
    partial void DeleteTERME(TERME instance);
    partial void InsertLOCATION(LOCATION instance);
    partial void UpdateLOCATION(LOCATION instance);
    partial void DeleteLOCATION(LOCATION instance);
    #endregion
		
		public DataPRIFDataContext() : 
				base(global::SGML.Properties.Settings.Default.ML645_05037ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataPRIFDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataPRIFDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataPRIFDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataPRIFDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CLIENT> CLIENTs
		{
			get
			{
				return this.GetTable<CLIENT>();
			}
		}
		
		public System.Data.Linq.Table<VEHICULE> VEHICULEs
		{
			get
			{
				return this.GetTable<VEHICULE>();
			}
		}
		
		public System.Data.Linq.Table<TYPE> TYPEs
		{
			get
			{
				return this.GetTable<TYPE>();
			}
		}
		
		public System.Data.Linq.Table<COULEUR> COULEURs
		{
			get
			{
				return this.GetTable<COULEUR>();
			}
		}
		
		public System.Data.Linq.Table<MODELE> MODELEs
		{
			get
			{
				return this.GetTable<MODELE>();
			}
		}
		
		public System.Data.Linq.Table<TERME> TERMEs
		{
			get
			{
				return this.GetTable<TERME>();
			}
		}
		
		public System.Data.Linq.Table<LOCATION> LOCATIONs
		{
			get
			{
				return this.GetTable<LOCATION>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SELECT_ALL_VEHICULE")]
		public ISingleResult<SELECT_ALL_VEHICULEResult> SELECT_ALL_VEHICULE()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SELECT_ALL_VEHICULEResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.INSERE_LOCATIONS")]
		public int INSERE_LOCATIONS([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> datedebut, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> datepaiement, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> montant, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> nbrpaiement, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string niv, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> terme, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idclient, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> km_debut, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> km_fin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> valeur, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> usage)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), datedebut, datepaiement, montant, nbrpaiement, niv, terme, idclient, km_debut, km_fin, valeur, usage);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENTS")]
	public partial class CLIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCLIENT;
		
		private string _PRENOM;
		
		private string _NOM;
		
		private string _ADDRESSE;
		
		private string _VILLE;
		
		private string _PROVINCE;
		
		private string _CODEPOSTAL;
		
		private string _TELEPHONE;
		
		private EntitySet<LOCATION> _LOCATIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCLIENTChanging(int value);
    partial void OnIDCLIENTChanged();
    partial void OnPRENOMChanging(string value);
    partial void OnPRENOMChanged();
    partial void OnNOMChanging(string value);
    partial void OnNOMChanged();
    partial void OnADDRESSEChanging(string value);
    partial void OnADDRESSEChanged();
    partial void OnVILLEChanging(string value);
    partial void OnVILLEChanged();
    partial void OnPROVINCEChanging(string value);
    partial void OnPROVINCEChanged();
    partial void OnCODEPOSTALChanging(string value);
    partial void OnCODEPOSTALChanged();
    partial void OnTELEPHONEChanging(string value);
    partial void OnTELEPHONEChanged();
    #endregion
		
		public CLIENT()
		{
			this._LOCATIONs = new EntitySet<LOCATION>(new Action<LOCATION>(this.attach_LOCATIONs), new Action<LOCATION>(this.detach_LOCATIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCLIENT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCLIENT
		{
			get
			{
				return this._IDCLIENT;
			}
			set
			{
				if ((this._IDCLIENT != value))
				{
					this.OnIDCLIENTChanging(value);
					this.SendPropertyChanging();
					this._IDCLIENT = value;
					this.SendPropertyChanged("IDCLIENT");
					this.OnIDCLIENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRENOM", DbType="NVarChar(50)")]
		public string PRENOM
		{
			get
			{
				return this._PRENOM;
			}
			set
			{
				if ((this._PRENOM != value))
				{
					this.OnPRENOMChanging(value);
					this.SendPropertyChanging();
					this._PRENOM = value;
					this.SendPropertyChanged("PRENOM");
					this.OnPRENOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOM", DbType="NVarChar(50)")]
		public string NOM
		{
			get
			{
				return this._NOM;
			}
			set
			{
				if ((this._NOM != value))
				{
					this.OnNOMChanging(value);
					this.SendPropertyChanging();
					this._NOM = value;
					this.SendPropertyChanged("NOM");
					this.OnNOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESSE", DbType="NVarChar(50)")]
		public string ADDRESSE
		{
			get
			{
				return this._ADDRESSE;
			}
			set
			{
				if ((this._ADDRESSE != value))
				{
					this.OnADDRESSEChanging(value);
					this.SendPropertyChanging();
					this._ADDRESSE = value;
					this.SendPropertyChanged("ADDRESSE");
					this.OnADDRESSEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VILLE", DbType="NVarChar(50)")]
		public string VILLE
		{
			get
			{
				return this._VILLE;
			}
			set
			{
				if ((this._VILLE != value))
				{
					this.OnVILLEChanging(value);
					this.SendPropertyChanging();
					this._VILLE = value;
					this.SendPropertyChanged("VILLE");
					this.OnVILLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROVINCE", DbType="NChar(2)")]
		public string PROVINCE
		{
			get
			{
				return this._PROVINCE;
			}
			set
			{
				if ((this._PROVINCE != value))
				{
					this.OnPROVINCEChanging(value);
					this.SendPropertyChanging();
					this._PROVINCE = value;
					this.SendPropertyChanged("PROVINCE");
					this.OnPROVINCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODEPOSTAL", DbType="NChar(6)")]
		public string CODEPOSTAL
		{
			get
			{
				return this._CODEPOSTAL;
			}
			set
			{
				if ((this._CODEPOSTAL != value))
				{
					this.OnCODEPOSTALChanging(value);
					this.SendPropertyChanging();
					this._CODEPOSTAL = value;
					this.SendPropertyChanged("CODEPOSTAL");
					this.OnCODEPOSTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEPHONE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string TELEPHONE
		{
			get
			{
				return this._TELEPHONE;
			}
			set
			{
				if ((this._TELEPHONE != value))
				{
					this.OnTELEPHONEChanging(value);
					this.SendPropertyChanging();
					this._TELEPHONE = value;
					this.SendPropertyChanged("TELEPHONE");
					this.OnTELEPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_LOCATION", Storage="_LOCATIONs", ThisKey="IDCLIENT", OtherKey="IDCLIENT")]
		public EntitySet<LOCATION> LOCATIONs
		{
			get
			{
				return this._LOCATIONs;
			}
			set
			{
				this._LOCATIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VEHICULES")]
	public partial class VEHICULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NIV;
		
		private int _MODELE;
		
		private int _ANNEE;
		
		private int _TYPE;
		
		private int _COULEUR;
		
		private EntitySet<LOCATION> _LOCATIONs;
		
		private EntityRef<TYPE> _TYPE1;
		
		private EntityRef<COULEUR> _COULEUR1;
		
		private EntityRef<MODELE> _MODELE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNIVChanging(string value);
    partial void OnNIVChanged();
    partial void OnMODELEChanging(int value);
    partial void OnMODELEChanged();
    partial void OnANNEEChanging(int value);
    partial void OnANNEEChanged();
    partial void OnTYPEChanging(int value);
    partial void OnTYPEChanged();
    partial void OnCOULEURChanging(int value);
    partial void OnCOULEURChanged();
    #endregion
		
		public VEHICULE()
		{
			this._LOCATIONs = new EntitySet<LOCATION>(new Action<LOCATION>(this.attach_LOCATIONs), new Action<LOCATION>(this.detach_LOCATIONs));
			this._TYPE1 = default(EntityRef<TYPE>);
			this._COULEUR1 = default(EntityRef<COULEUR>);
			this._MODELE1 = default(EntityRef<MODELE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NIV
		{
			get
			{
				return this._NIV;
			}
			set
			{
				if ((this._NIV != value))
				{
					this.OnNIVChanging(value);
					this.SendPropertyChanging();
					this._NIV = value;
					this.SendPropertyChanged("NIV");
					this.OnNIVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODELE", DbType="Int NOT NULL")]
		public int MODELE
		{
			get
			{
				return this._MODELE;
			}
			set
			{
				if ((this._MODELE != value))
				{
					if (this._MODELE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMODELEChanging(value);
					this.SendPropertyChanging();
					this._MODELE = value;
					this.SendPropertyChanged("MODELE");
					this.OnMODELEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANNEE", DbType="Int NOT NULL")]
		public int ANNEE
		{
			get
			{
				return this._ANNEE;
			}
			set
			{
				if ((this._ANNEE != value))
				{
					this.OnANNEEChanging(value);
					this.SendPropertyChanging();
					this._ANNEE = value;
					this.SendPropertyChanged("ANNEE");
					this.OnANNEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="Int NOT NULL")]
		public int TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					if (this._TYPE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COULEUR", DbType="Int NOT NULL")]
		public int COULEUR
		{
			get
			{
				return this._COULEUR;
			}
			set
			{
				if ((this._COULEUR != value))
				{
					if (this._COULEUR1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOULEURChanging(value);
					this.SendPropertyChanging();
					this._COULEUR = value;
					this.SendPropertyChanged("COULEUR");
					this.OnCOULEURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_LOCATION", Storage="_LOCATIONs", ThisKey="NIV", OtherKey="NIV")]
		public EntitySet<LOCATION> LOCATIONs
		{
			get
			{
				return this._LOCATIONs;
			}
			set
			{
				this._LOCATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_VEHICULE", Storage="_TYPE1", ThisKey="TYPE", OtherKey="ID", IsForeignKey=true)]
		public TYPE TYPE1
		{
			get
			{
				return this._TYPE1.Entity;
			}
			set
			{
				TYPE previousValue = this._TYPE1.Entity;
				if (((previousValue != value) 
							|| (this._TYPE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPE1.Entity = null;
						previousValue.VEHICULEs.Remove(this);
					}
					this._TYPE1.Entity = value;
					if ((value != null))
					{
						value.VEHICULEs.Add(this);
						this._TYPE = value.ID;
					}
					else
					{
						this._TYPE = default(int);
					}
					this.SendPropertyChanged("TYPE1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COULEUR_VEHICULE", Storage="_COULEUR1", ThisKey="COULEUR", OtherKey="ID", IsForeignKey=true)]
		public COULEUR COULEUR1
		{
			get
			{
				return this._COULEUR1.Entity;
			}
			set
			{
				COULEUR previousValue = this._COULEUR1.Entity;
				if (((previousValue != value) 
							|| (this._COULEUR1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COULEUR1.Entity = null;
						previousValue.VEHICULEs.Remove(this);
					}
					this._COULEUR1.Entity = value;
					if ((value != null))
					{
						value.VEHICULEs.Add(this);
						this._COULEUR = value.ID;
					}
					else
					{
						this._COULEUR = default(int);
					}
					this.SendPropertyChanged("COULEUR1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MODELE_VEHICULE", Storage="_MODELE1", ThisKey="MODELE", OtherKey="ID", IsForeignKey=true)]
		public MODELE MODELE1
		{
			get
			{
				return this._MODELE1.Entity;
			}
			set
			{
				MODELE previousValue = this._MODELE1.Entity;
				if (((previousValue != value) 
							|| (this._MODELE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MODELE1.Entity = null;
						previousValue.VEHICULEs.Remove(this);
					}
					this._MODELE1.Entity = value;
					if ((value != null))
					{
						value.VEHICULEs.Add(this);
						this._MODELE = value.ID;
					}
					else
					{
						this._MODELE = default(int);
					}
					this.SendPropertyChanged("MODELE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = this;
		}
		
		private void detach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.VEHICULE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPES")]
	public partial class TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TYPE1;
		
		private EntitySet<VEHICULE> _VEHICULEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTYPE1Changing(string value);
    partial void OnTYPE1Changed();
    #endregion
		
		public TYPE()
		{
			this._VEHICULEs = new EntitySet<VEHICULE>(new Action<VEHICULE>(this.attach_VEHICULEs), new Action<VEHICULE>(this.detach_VEHICULEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TYPE", Storage="_TYPE1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TYPE1
		{
			get
			{
				return this._TYPE1;
			}
			set
			{
				if ((this._TYPE1 != value))
				{
					this.OnTYPE1Changing(value);
					this.SendPropertyChanging();
					this._TYPE1 = value;
					this.SendPropertyChanged("TYPE1");
					this.OnTYPE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPE_VEHICULE", Storage="_VEHICULEs", ThisKey="ID", OtherKey="TYPE")]
		public EntitySet<VEHICULE> VEHICULEs
		{
			get
			{
				return this._VEHICULEs;
			}
			set
			{
				this._VEHICULEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEHICULEs(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.TYPE1 = this;
		}
		
		private void detach_VEHICULEs(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.TYPE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COULEURS")]
	public partial class COULEUR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _COULEUR1;
		
		private EntitySet<VEHICULE> _VEHICULEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCOULEUR1Changing(string value);
    partial void OnCOULEUR1Changed();
    #endregion
		
		public COULEUR()
		{
			this._VEHICULEs = new EntitySet<VEHICULE>(new Action<VEHICULE>(this.attach_VEHICULEs), new Action<VEHICULE>(this.detach_VEHICULEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="COULEUR", Storage="_COULEUR1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string COULEUR1
		{
			get
			{
				return this._COULEUR1;
			}
			set
			{
				if ((this._COULEUR1 != value))
				{
					this.OnCOULEUR1Changing(value);
					this.SendPropertyChanging();
					this._COULEUR1 = value;
					this.SendPropertyChanged("COULEUR1");
					this.OnCOULEUR1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COULEUR_VEHICULE", Storage="_VEHICULEs", ThisKey="ID", OtherKey="COULEUR")]
		public EntitySet<VEHICULE> VEHICULEs
		{
			get
			{
				return this._VEHICULEs;
			}
			set
			{
				this._VEHICULEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEHICULEs(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.COULEUR1 = this;
		}
		
		private void detach_VEHICULEs(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.COULEUR1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MODELES")]
	public partial class MODELE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MODELE1;
		
		private EntitySet<VEHICULE> _VEHICULEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMODELE1Changing(string value);
    partial void OnMODELE1Changed();
    #endregion
		
		public MODELE()
		{
			this._VEHICULEs = new EntitySet<VEHICULE>(new Action<VEHICULE>(this.attach_VEHICULEs), new Action<VEHICULE>(this.detach_VEHICULEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MODELE", Storage="_MODELE1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MODELE1
		{
			get
			{
				return this._MODELE1;
			}
			set
			{
				if ((this._MODELE1 != value))
				{
					this.OnMODELE1Changing(value);
					this.SendPropertyChanging();
					this._MODELE1 = value;
					this.SendPropertyChanged("MODELE1");
					this.OnMODELE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MODELE_VEHICULE", Storage="_VEHICULEs", ThisKey="ID", OtherKey="MODELE")]
		public EntitySet<VEHICULE> VEHICULEs
		{
			get
			{
				return this._VEHICULEs;
			}
			set
			{
				this._VEHICULEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VEHICULEs(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.MODELE1 = this;
		}
		
		private void detach_VEHICULEs(VEHICULE entity)
		{
			this.SendPropertyChanging();
			entity.MODELE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TERMES")]
	public partial class TERME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TERME1;
		
		private System.Nullable<int> _NBRANNEE;
		
		private System.Nullable<int> _NBRKM;
		
		private System.Nullable<decimal> _PRIMEKM;
		
		private EntitySet<LOCATION> _LOCATIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTERME1Changing(string value);
    partial void OnTERME1Changed();
    partial void OnNBRANNEEChanging(System.Nullable<int> value);
    partial void OnNBRANNEEChanged();
    partial void OnNBRKMChanging(System.Nullable<int> value);
    partial void OnNBRKMChanged();
    partial void OnPRIMEKMChanging(System.Nullable<decimal> value);
    partial void OnPRIMEKMChanged();
    #endregion
		
		public TERME()
		{
			this._LOCATIONs = new EntitySet<LOCATION>(new Action<LOCATION>(this.attach_LOCATIONs), new Action<LOCATION>(this.detach_LOCATIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TERME", Storage="_TERME1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TERME1
		{
			get
			{
				return this._TERME1;
			}
			set
			{
				if ((this._TERME1 != value))
				{
					this.OnTERME1Changing(value);
					this.SendPropertyChanging();
					this._TERME1 = value;
					this.SendPropertyChanged("TERME1");
					this.OnTERME1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NBRANNEE", DbType="Int")]
		public System.Nullable<int> NBRANNEE
		{
			get
			{
				return this._NBRANNEE;
			}
			set
			{
				if ((this._NBRANNEE != value))
				{
					this.OnNBRANNEEChanging(value);
					this.SendPropertyChanging();
					this._NBRANNEE = value;
					this.SendPropertyChanged("NBRANNEE");
					this.OnNBRANNEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NBRKM", DbType="Int")]
		public System.Nullable<int> NBRKM
		{
			get
			{
				return this._NBRKM;
			}
			set
			{
				if ((this._NBRKM != value))
				{
					this.OnNBRKMChanging(value);
					this.SendPropertyChanging();
					this._NBRKM = value;
					this.SendPropertyChanged("NBRKM");
					this.OnNBRKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRIMEKM", DbType="Money")]
		public System.Nullable<decimal> PRIMEKM
		{
			get
			{
				return this._PRIMEKM;
			}
			set
			{
				if ((this._PRIMEKM != value))
				{
					this.OnPRIMEKMChanging(value);
					this.SendPropertyChanging();
					this._PRIMEKM = value;
					this.SendPropertyChanged("PRIMEKM");
					this.OnPRIMEKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TERME_LOCATION", Storage="_LOCATIONs", ThisKey="ID", OtherKey="TERME")]
		public EntitySet<LOCATION> LOCATIONs
		{
			get
			{
				return this._LOCATIONs;
			}
			set
			{
				this._LOCATIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.TERME1 = this;
		}
		
		private void detach_LOCATIONs(LOCATION entity)
		{
			this.SendPropertyChanging();
			entity.TERME1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOCATIONS")]
	public partial class LOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _DATEDEBUT;
		
		private System.Nullable<System.DateTime> _DATEPAIEMENT;
		
		private System.Nullable<decimal> _MONTANT;
		
		private System.Nullable<int> _NBRPAIEMENT;
		
		private string _NIV;
		
		private int _TERME;
		
		private int _IDCLIENT;
		
		private System.Nullable<int> _KM_DEBUT;
		
		private System.Nullable<int> _KM_FIN;
		
		private System.Nullable<decimal> _VALEUR;
		
		private System.Nullable<bool> _USAGE;
		
		private EntityRef<CLIENT> _CLIENT;
		
		private EntityRef<TERME> _TERME1;
		
		private EntityRef<VEHICULE> _VEHICULE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDATEDEBUTChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEDEBUTChanged();
    partial void OnDATEPAIEMENTChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEPAIEMENTChanged();
    partial void OnMONTANTChanging(System.Nullable<decimal> value);
    partial void OnMONTANTChanged();
    partial void OnNBRPAIEMENTChanging(System.Nullable<int> value);
    partial void OnNBRPAIEMENTChanged();
    partial void OnNIVChanging(string value);
    partial void OnNIVChanged();
    partial void OnTERMEChanging(int value);
    partial void OnTERMEChanged();
    partial void OnIDCLIENTChanging(int value);
    partial void OnIDCLIENTChanged();
    partial void OnKM_DEBUTChanging(System.Nullable<int> value);
    partial void OnKM_DEBUTChanged();
    partial void OnKM_FINChanging(System.Nullable<int> value);
    partial void OnKM_FINChanged();
    partial void OnVALEURChanging(System.Nullable<decimal> value);
    partial void OnVALEURChanged();
    partial void OnUSAGEChanging(System.Nullable<bool> value);
    partial void OnUSAGEChanged();
    #endregion
		
		public LOCATION()
		{
			this._CLIENT = default(EntityRef<CLIENT>);
			this._TERME1 = default(EntityRef<TERME>);
			this._VEHICULE = default(EntityRef<VEHICULE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEDEBUT", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEDEBUT
		{
			get
			{
				return this._DATEDEBUT;
			}
			set
			{
				if ((this._DATEDEBUT != value))
				{
					this.OnDATEDEBUTChanging(value);
					this.SendPropertyChanging();
					this._DATEDEBUT = value;
					this.SendPropertyChanged("DATEDEBUT");
					this.OnDATEDEBUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEPAIEMENT", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEPAIEMENT
		{
			get
			{
				return this._DATEPAIEMENT;
			}
			set
			{
				if ((this._DATEPAIEMENT != value))
				{
					this.OnDATEPAIEMENTChanging(value);
					this.SendPropertyChanging();
					this._DATEPAIEMENT = value;
					this.SendPropertyChanged("DATEPAIEMENT");
					this.OnDATEPAIEMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MONTANT", DbType="Money")]
		public System.Nullable<decimal> MONTANT
		{
			get
			{
				return this._MONTANT;
			}
			set
			{
				if ((this._MONTANT != value))
				{
					this.OnMONTANTChanging(value);
					this.SendPropertyChanging();
					this._MONTANT = value;
					this.SendPropertyChanged("MONTANT");
					this.OnMONTANTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NBRPAIEMENT", DbType="Int")]
		public System.Nullable<int> NBRPAIEMENT
		{
			get
			{
				return this._NBRPAIEMENT;
			}
			set
			{
				if ((this._NBRPAIEMENT != value))
				{
					this.OnNBRPAIEMENTChanging(value);
					this.SendPropertyChanging();
					this._NBRPAIEMENT = value;
					this.SendPropertyChanged("NBRPAIEMENT");
					this.OnNBRPAIEMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NIV
		{
			get
			{
				return this._NIV;
			}
			set
			{
				if ((this._NIV != value))
				{
					if (this._VEHICULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNIVChanging(value);
					this.SendPropertyChanging();
					this._NIV = value;
					this.SendPropertyChanged("NIV");
					this.OnNIVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERME", DbType="Int NOT NULL")]
		public int TERME
		{
			get
			{
				return this._TERME;
			}
			set
			{
				if ((this._TERME != value))
				{
					if (this._TERME1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTERMEChanging(value);
					this.SendPropertyChanging();
					this._TERME = value;
					this.SendPropertyChanged("TERME");
					this.OnTERMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCLIENT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCLIENT
		{
			get
			{
				return this._IDCLIENT;
			}
			set
			{
				if ((this._IDCLIENT != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCLIENTChanging(value);
					this.SendPropertyChanging();
					this._IDCLIENT = value;
					this.SendPropertyChanged("IDCLIENT");
					this.OnIDCLIENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KM_DEBUT", DbType="Int")]
		public System.Nullable<int> KM_DEBUT
		{
			get
			{
				return this._KM_DEBUT;
			}
			set
			{
				if ((this._KM_DEBUT != value))
				{
					this.OnKM_DEBUTChanging(value);
					this.SendPropertyChanging();
					this._KM_DEBUT = value;
					this.SendPropertyChanged("KM_DEBUT");
					this.OnKM_DEBUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KM_FIN", DbType="Int")]
		public System.Nullable<int> KM_FIN
		{
			get
			{
				return this._KM_FIN;
			}
			set
			{
				if ((this._KM_FIN != value))
				{
					this.OnKM_FINChanging(value);
					this.SendPropertyChanging();
					this._KM_FIN = value;
					this.SendPropertyChanged("KM_FIN");
					this.OnKM_FINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALEUR", DbType="Money")]
		public System.Nullable<decimal> VALEUR
		{
			get
			{
				return this._VALEUR;
			}
			set
			{
				if ((this._VALEUR != value))
				{
					this.OnVALEURChanging(value);
					this.SendPropertyChanging();
					this._VALEUR = value;
					this.SendPropertyChanged("VALEUR");
					this.OnVALEURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USAGE", DbType="Bit")]
		public System.Nullable<bool> USAGE
		{
			get
			{
				return this._USAGE;
			}
			set
			{
				if ((this._USAGE != value))
				{
					this.OnUSAGEChanging(value);
					this.SendPropertyChanging();
					this._USAGE = value;
					this.SendPropertyChanged("USAGE");
					this.OnUSAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_LOCATION", Storage="_CLIENT", ThisKey="IDCLIENT", OtherKey="IDCLIENT", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.LOCATIONs.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.LOCATIONs.Add(this);
						this._IDCLIENT = value.IDCLIENT;
					}
					else
					{
						this._IDCLIENT = default(int);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TERME_LOCATION", Storage="_TERME1", ThisKey="TERME", OtherKey="ID", IsForeignKey=true)]
		public TERME TERME1
		{
			get
			{
				return this._TERME1.Entity;
			}
			set
			{
				TERME previousValue = this._TERME1.Entity;
				if (((previousValue != value) 
							|| (this._TERME1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TERME1.Entity = null;
						previousValue.LOCATIONs.Remove(this);
					}
					this._TERME1.Entity = value;
					if ((value != null))
					{
						value.LOCATIONs.Add(this);
						this._TERME = value.ID;
					}
					else
					{
						this._TERME = default(int);
					}
					this.SendPropertyChanged("TERME1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VEHICULE_LOCATION", Storage="_VEHICULE", ThisKey="NIV", OtherKey="NIV", IsForeignKey=true)]
		public VEHICULE VEHICULE
		{
			get
			{
				return this._VEHICULE.Entity;
			}
			set
			{
				VEHICULE previousValue = this._VEHICULE.Entity;
				if (((previousValue != value) 
							|| (this._VEHICULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VEHICULE.Entity = null;
						previousValue.LOCATIONs.Remove(this);
					}
					this._VEHICULE.Entity = value;
					if ((value != null))
					{
						value.LOCATIONs.Add(this);
						this._NIV = value.NIV;
					}
					else
					{
						this._NIV = default(string);
					}
					this.SendPropertyChanged("VEHICULE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SELECT_ALL_VEHICULEResult
	{
		
		private string _NIV;
		
		private int _ANNEE;
		
		private string _MODELE;
		
		private string _TYPE;
		
		private string _COULEUR;
		
		public SELECT_ALL_VEHICULEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NIV
		{
			get
			{
				return this._NIV;
			}
			set
			{
				if ((this._NIV != value))
				{
					this._NIV = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANNEE", DbType="Int NOT NULL")]
		public int ANNEE
		{
			get
			{
				return this._ANNEE;
			}
			set
			{
				if ((this._ANNEE != value))
				{
					this._ANNEE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MODELE", DbType="NVarChar(50)")]
		public string MODELE
		{
			get
			{
				return this._MODELE;
			}
			set
			{
				if ((this._MODELE != value))
				{
					this._MODELE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="NVarChar(50)")]
		public string TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this._TYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COULEUR", DbType="NVarChar(50)")]
		public string COULEUR
		{
			get
			{
				return this._COULEUR;
			}
			set
			{
				if ((this._COULEUR != value))
				{
					this._COULEUR = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
