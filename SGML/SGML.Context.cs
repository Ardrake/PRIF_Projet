//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SGML
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class myConnection : DbContext
    {
        public myConnection()
            : base("name=myConnection")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AUDIT> AUDITS { get; set; }
        public virtual DbSet<CLIENT> CLIENTS { get; set; }
        public virtual DbSet<COULEUR> COULEURS { get; set; }
        public virtual DbSet<LOCATION> LOCATIONS { get; set; }
        public virtual DbSet<MODELE> MODELES { get; set; }
        public virtual DbSet<OPTION> OPTIONS { get; set; }
        public virtual DbSet<PAIEMENT> PAIEMENTS { get; set; }
        public virtual DbSet<TERME> TERMES { get; set; }
        public virtual DbSet<TYPE> TYPES { get; set; }
        public virtual DbSet<VEHICULE> VEHICULES { get; set; }
        public virtual DbSet<Etape3> Etape3 { get; set; }
    
        public virtual int INSERE_LOCATIONS(Nullable<System.DateTime> datedebut, Nullable<System.DateTime> datepaiement, Nullable<decimal> montant, Nullable<int> nbrpaiement, string niv, Nullable<int> terme, Nullable<int> idclient, Nullable<int> km_debut, Nullable<int> km_fin, Nullable<decimal> valeur, Nullable<bool> usage)
        {
            var datedebutParameter = datedebut.HasValue ?
                new ObjectParameter("datedebut", datedebut) :
                new ObjectParameter("datedebut", typeof(System.DateTime));
    
            var datepaiementParameter = datepaiement.HasValue ?
                new ObjectParameter("datepaiement", datepaiement) :
                new ObjectParameter("datepaiement", typeof(System.DateTime));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            var nbrpaiementParameter = nbrpaiement.HasValue ?
                new ObjectParameter("nbrpaiement", nbrpaiement) :
                new ObjectParameter("nbrpaiement", typeof(int));
    
            var nivParameter = niv != null ?
                new ObjectParameter("niv", niv) :
                new ObjectParameter("niv", typeof(string));
    
            var termeParameter = terme.HasValue ?
                new ObjectParameter("terme", terme) :
                new ObjectParameter("terme", typeof(int));
    
            var idclientParameter = idclient.HasValue ?
                new ObjectParameter("idclient", idclient) :
                new ObjectParameter("idclient", typeof(int));
    
            var km_debutParameter = km_debut.HasValue ?
                new ObjectParameter("km_debut", km_debut) :
                new ObjectParameter("km_debut", typeof(int));
    
            var km_finParameter = km_fin.HasValue ?
                new ObjectParameter("km_fin", km_fin) :
                new ObjectParameter("km_fin", typeof(int));
    
            var valeurParameter = valeur.HasValue ?
                new ObjectParameter("valeur", valeur) :
                new ObjectParameter("valeur", typeof(decimal));
    
            var usageParameter = usage.HasValue ?
                new ObjectParameter("usage", usage) :
                new ObjectParameter("usage", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERE_LOCATIONS", datedebutParameter, datepaiementParameter, montantParameter, nbrpaiementParameter, nivParameter, termeParameter, idclientParameter, km_debutParameter, km_finParameter, valeurParameter, usageParameter);
        }
    
        public virtual int INSERE_PAIEMENT(Nullable<decimal> montant, string niv, Nullable<int> idclient)
        {
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            var nivParameter = niv != null ?
                new ObjectParameter("niv", niv) :
                new ObjectParameter("niv", typeof(string));
    
            var idclientParameter = idclient.HasValue ?
                new ObjectParameter("idclient", idclient) :
                new ObjectParameter("idclient", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERE_PAIEMENT", montantParameter, nivParameter, idclientParameter);
        }
    
        public virtual ObjectResult<SELECT_LOCATION_Result> SELECT_LOCATION(string niv, Nullable<int> idclient)
        {
            var nivParameter = niv != null ?
                new ObjectParameter("niv", niv) :
                new ObjectParameter("niv", typeof(string));
    
            var idclientParameter = idclient.HasValue ?
                new ObjectParameter("idclient", idclient) :
                new ObjectParameter("idclient", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_LOCATION_Result>("SELECT_LOCATION", nivParameter, idclientParameter);
        }
    
        public virtual int SUPPRIME_CLIENT(Nullable<int> idclient)
        {
            var idclientParameter = idclient.HasValue ?
                new ObjectParameter("idclient", idclient) :
                new ObjectParameter("idclient", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SUPPRIME_CLIENT", idclientParameter);
        }
    
        public virtual int UPDATE_MONTANT_LOCATION(string niv, Nullable<int> idclient, Nullable<decimal> montant)
        {
            var nivParameter = niv != null ?
                new ObjectParameter("niv", niv) :
                new ObjectParameter("niv", typeof(string));
    
            var idclientParameter = idclient.HasValue ?
                new ObjectParameter("idclient", idclient) :
                new ObjectParameter("idclient", typeof(int));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_MONTANT_LOCATION", nivParameter, idclientParameter, montantParameter);
        }
    }
}
